name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Build
      id: build
      run: go build -v ./src/vivid/...
      continue-on-error: true

    - name: Test with Coverage
      id: test
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./src/vivid/...
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        fail_ci_if_error: false
        verbose: true
      if: steps.test.outcome == 'success'

    - name: Create Issue on Failure
      if: steps.build.outcome == 'failure' || steps.test.outcome == 'failure'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const buildFailed = '${{ steps.build.outcome }}' === 'failure';
          const testFailed = '${{ steps.test.outcome }}' === 'failure';

          let title = '[BUG] Workflow 检测失败: ';
          if (buildFailed) title += '构建失败';
          else if (testFailed) title += '测试失败';

          let body = `## 错误描述\nCI/CD 流程中检测到工作流失败。\n\n`;

          body += `## 复现步骤\n1. 查看 [工作流运行](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})\n\n`;

          body += `## 环境\n- 工作流: ${process.env.GITHUB_WORKFLOW}\n- 提交: ${process.env.GITHUB_SHA}\n- 分支: ${process.env.GITHUB_REF}\n\n`;

          body += `## 附加上下文\n此问题由 GitHub Actions 工作流自动创建。`;

          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'automated']
          });
